{"version":3,"file":"js/851.43cf0822.js","mappings":"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","sources":["webpack://vocabTester/./src/views/TestView.vue","webpack://vocabTester/./src/views/TestView.vue?4760"],"sourcesContent":["<template>\r\n    <div class=\"test\">\r\n\r\n        <transition name=\"test__introTra\">\r\n            <div class=\"test__message\" v-show=\"test == 'introduction'\">\r\n                <h4 class=\"test__heading\">ルール</h4>\r\n                <p class=\"test__message__rules\">\r\n                    \r\n                    英単語の記されたカードが数秒おきに追加されていきます。<br>\r\n                    いずれかのカードに記された単語をタイピングしたのち、Enterキーで入力を確定してください。<br>\r\n                    場に出ているカードの中に入力された英単語と一致するものがあれば、<br>\r\n                    そのカードは除かれ、英単語の文字数に応じたスコアが加算されます。<br>\r\n                    制限時間は60秒です。<br>\r\n                    <br>\r\n\r\n                    - スペースキーで開始します -\r\n\r\n                </p>\r\n            </div>\r\n        </transition>\r\n        <!-- introduction -->\r\n\r\n        <div class=\"test__play\" v-show=\"test == 'game'\">\r\n\r\n            <transition-group name=\"test__tra\" tag=\"div\" class=\"test__play__flex\">\r\n                <div class=\"test__card\" v-for='item in selectedIdx' :key=\"item\">\r\n                    <div class=\"test__card__wordPos\">\r\n                        <h4 class=\"test__card__wordInputted\" :class=\"{wordDummy__same: wordData[item].name == letters}\">{{wordData[item].name.startsWith(letters) ? wordData[item].name.slice(0, letters.length): \"\"}}</h4>\r\n                        <!-- <h4 class=\"test__card__wordUnder\">{{wordData[item].name.slice(0, 1)}}</h4> -->\r\n                        <h4 class=\"test__card__wordUnder\">{{wordData[item].name.slice(0, Math.max(1, selectedShow[item]))}}</h4>\r\n                        <h4 class=\"test__card__wordDummy\">{{wordData[item].name}}</h4>\r\n                    </div>\r\n                    <p class=\"test__card__desc\">{{wordData[item].description}}</p>\r\n                </div>\r\n            </transition-group>\r\n\r\n            <div class=\"test__play__state\">\r\n                <div class=\"test__play__timerDummy\">\r\n                    <div class=\"test__play__timer\"></div>\r\n                </div>\r\n                <p class=\"test__play__letters\" :class=\"{letters__green: selectedWords.includes(letters), letters__red: selectedWords.every(elm => !elm.startsWith(letters))}\">{{letters}}<span class=\"test__play__cursor\" :class=\"{cursorHide: !cursorShow}\">|</span></p>\r\n            </div>\r\n\r\n        </div>\r\n        <!-- game -->\r\n\r\n        <div class=\"test__result\" v-show=\"test == 'result'\">\r\n            <div class=\"test__result__stickyDummy\">\r\n                <p class=\"test__result__scorePara\">今回のスコアは<span class=\"test__resultHL\">{{score}}</span>点でした<br>\r\n                <br>\r\n                スペースキーで最初の画面に戻ります</p>\r\n                \r\n                <!-- <p class=\"test__result__wordPara\">タイピングした英単語</p> -->\r\n            </div>\r\n            <div class=\"test__result__wordFlex\">\r\n                <div class=\"test__card\" v-for='item in removedWord' :key=\"item\">\r\n                    <div class=\"test__card__wordPos\">\r\n                        <h4 class=\"test__card__word\">{{item.name}}</h4>\r\n                    </div>\r\n                    <p class=\"test__card__pos\">[{{item.a}}]</p>\r\n                    <p class=\"test__card__desc\">{{item.description}}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default ({\r\n    name: 'TestView',\r\n\r\n    data: function() {\r\n        return {\r\n            test: \"introduction\",\r\n            letters: \"\",\r\n\r\n            cursorShow: true,\r\n\r\n            word_point: 0,\r\n\r\n            selectedIdx: [],\r\n            selectedMap: {},\r\n            selectedShow: {},\r\n\r\n            cardInterval: '',\r\n            cursorTimer: '',\r\n            // showLetterTimer: '',\r\n\r\n            removedWord: [],\r\n            score: 0,\r\n\r\n        }\r\n    },\r\n    \r\n    props: ['wordData'],\r\n\r\n    methods: {\r\n\r\n        startTrain: function() {\r\n\r\n            let thisVue = this;\r\n\r\n            thisVue.$nextTick(function() {\r\n\r\n                thisVue.selectedIdx = [];\r\n\r\n                thisVue.selectedMap = {};\r\n\r\n                thisVue.selectedShow = {};\r\n\r\n                thisVue.word_point = 0;\r\n\r\n                thisVue.score = 0;\r\n\r\n                thisVue.letters = \"\";\r\n                \r\n                thisVue.removedWord = [],\r\n\r\n                thisVue.cursorShow = true;\r\n                \r\n                thisVue.cursorTimer = setInterval(function() {\r\n                    thisVue.cursorShow = !thisVue.cursorShow;\r\n                }, 500);\r\n\r\n\r\n                thisVue.choiceCards();                \r\n\r\n                thisVue.cardInterval = setInterval(function () {\r\n                    thisVue.choiceCards();                \r\n                }, 5000);\r\n                    \r\n                // 数秒ごとにヒントを開示する\r\n                // thisVue.showLetterTimer = setInterval(function() {\r\n                    \r\n                //     Object.keys(thisVue.selectedShow).forEach((key) => {\r\n\r\n                //         let wordLen = thisVue.wordData[key].name.length;\r\n\r\n                //         let showLen = thisVue.selectedShow[key];\r\n\r\n                //         if(showLen < wordLen) {\r\n                //             thisVue.selectedShow[key]++;\r\n                //         }\r\n\r\n                //     });\r\n\r\n                // }, 5000);\r\n\r\n                let timer = Array.from(document.getElementsByClassName(\"test__play__timer\"))[0];\r\n\r\n\r\n\r\n                timer.addEventListener(\"animationend\", function() {\r\n\r\n                    thisVue.selectedIdx = [];\r\n\r\n                    thisVue.selectedMap = {};\r\n\r\n                    thisVue.letters = \"\";\r\n\r\n                    clearInterval(thisVue.cardInterval);\r\n\r\n                    clearInterval(thisVue.cursorTimer);\r\n\r\n                    // clearInterval(thisVue.showLetterTimer);\r\n\r\n                    thisVue.test = \"result\";\r\n\r\n                    thisVue.word_point = 0;\r\n                })\r\n\r\n            })\r\n            // nextTick\r\n\r\n        },\r\n        // startTrain\r\n        choiceCards: function () {\r\n\r\n            let thisVue = this;\r\n\r\n            let prevPoint = thisVue.word_point;\r\n\r\n            let currentPoint = prevPoint;\r\n\r\n            while(currentPoint - prevPoint < 4 && currentPoint < 10) {\r\n                let randomChoice = 0;\r\n                do {\r\n                    randomChoice = Math.floor(Math.random() * thisVue.wordData.length);\r\n                }while(thisVue.selectedIdx.includes(randomChoice));\r\n\r\n                thisVue.selectedIdx.push(randomChoice);\r\n\r\n                thisVue.selectedShow[randomChoice] = 0;\r\n\r\n                let word = thisVue.wordData[randomChoice];\r\n\r\n                thisVue.selectedMap[word.name] = randomChoice;\r\n\r\n                if(10 < word.description.length) {\r\n                    currentPoint += 2;\r\n                }else {\r\n                    currentPoint += 1;\r\n                }\r\n\r\n            }\r\n\r\n            thisVue.word_point = currentPoint;\r\n        },\r\n\r\n    },\r\n\r\n    computed: {\r\n        selectedWords: function() {\r\n            let tempArr = [];\r\n            this.selectedIdx.forEach(elm => {\r\n                tempArr.push(this.wordData[elm].name);\r\n            });\r\n\r\n            return tempArr;\r\n        }\r\n    },\r\n\r\n    beforeMount: async function() {\r\n        \r\n        const thisVue = this;\r\n\r\n        // let cursorTimer;\r\n\r\n        clearInterval(thisVue.cardInterval);\r\n\r\n        clearInterval(thisVue.cursorTimer);\r\n\r\n        // clearInterval(thisVue.showLetterTimer);\r\n\r\n        document.addEventListener(\"keypress\", function(e) {\r\n            if(e.code == 'Space'){\r\n                if(thisVue.test == \"introduction\") {\r\n                    thisVue.test = \"game\";\r\n                    thisVue.startTrain();\r\n                }else if(thisVue.test == \"result\"){\r\n                    thisVue.test = \"introduction\";\r\n                }\r\n            }\r\n        })\r\n\r\n\r\n        window.addEventListener(\"keydown\", function(e) {\r\n            let pushedKey = e.key.toLowerCase();\r\n\r\n            if(pushedKey == \"enter\") {\r\n\r\n                if(Object.keys(thisVue.selectedMap).includes(thisVue.letters)) {\r\n\r\n                    let idx = thisVue.selectedIdx.indexOf(thisVue.selectedMap[thisVue.letters]);\r\n\r\n                    thisVue.selectedIdx.splice(idx, 1);\r\n\r\n                    delete thisVue.selectedShow[idx];\r\n                    \r\n                    if(10 < thisVue.letters.length) {\r\n                        thisVue.word_point -= 2;\r\n                    }else {\r\n                        thisVue.word_point -= 1;\r\n                    }\r\n\r\n                    thisVue.score += thisVue.letters.length;\r\n                    thisVue.removedWord.push(thisVue.wordData[thisVue.selectedMap[thisVue.letters]]);\r\n\r\n                    delete thisVue.selectedMap[thisVue.letters];\r\n                    delete thisVue.selectedShow[thisVue.letters];\r\n\r\n                    // 先頭の英単語からヒント開放\r\n                    // let hintCnt = Math.floor(thisVue.selectedWords.length / 2);\r\n\r\n                    // let showMapKeys = Object.keys(thisVue.selectedShow);\r\n\r\n                    // for(let i = 0; i <= hintCnt; i++) {\r\n\r\n                    //     let randomShowIdx = Math.floor(Math.random() * showMapKeys.length);\r\n\r\n                    //     let randomKey = showMapKeys[randomShowIdx];\r\n                        \r\n                    //     let wordLen = thisVue.wordData[randomKey].name.length;\r\n                    //     let showLen = thisVue.selectedShow[randomKey];\r\n\r\n                    //     if(showLen < wordLen) {\r\n                    //         thisVue.selectedShow[randomKey]++;\r\n                    //     }\r\n                    // }\r\n                    \r\n                    // すべての英単語に１文字ずつヒント解放\r\n                    // Object.keys(thisVue.selectedShow).forEach((key) => {\r\n                    //     let wordLen = thisVue.wordData[key].name.length;\r\n                    //     let showLen = thisVue.selectedShow[key];\r\n\r\n                    //     if(showLen < wordLen) {\r\n                    //         thisVue.selectedShow[key]++;\r\n                    //     }\r\n                    // });\r\n\r\n\r\n                    thisVue.letters = \"\";\r\n\r\n                }\r\n\r\n            }else if(pushedKey == \"backspace\") {\r\n                thisVue.letters = thisVue.letters.slice(0, -1);\r\n            }else if(pushedKey == \"escape\") {\r\n                thisVue.letters = \"\";\r\n            }else if(pushedKey == \"-\") {\r\n                thisVue.letters += \"-\";\r\n            }else if(pushedKey.match(/^[a-z]$/)){\r\n                thisVue.letters += pushedKey;\r\n\r\n\r\n\r\n                // 入力時に入力履歴を残すかどうか\r\n                // thisVue.selectedIdx.forEach((value) => {\r\n\r\n                //     let word = thisVue.wordData[value].name;\r\n\r\n                //     let showLen = thisVue.selectedShow[value];\r\n\r\n                //     if(showLen < thisVue.letters.length && word.startsWith(thisVue.letters)) {\r\n                //         thisVue.selectedShow[value]++;\r\n                //     }\r\n                // });\r\n\r\n            }\r\n\r\n\r\n\r\n        });\r\n    },\r\n\r\n    beforeUnmount: function() {\r\n        clearInterval(this.cardInterval);\r\n        clearInterval(this.cursorTimer);\r\n        // clearInterval(this.showLetterTimer);\r\n    }\r\n\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n    .test {\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n\r\n    .test .test__result::-webkit-scrollbar {\r\n        width: 15px;\r\n    }\r\n\r\n    .test .test__result::-webkit-scrollbar-track {\r\n        background-color: #e4e4e4;\r\n        border-radius: 1px;\r\n    }\r\n\r\n    .test .test__result::-webkit-scrollbar-thumb {\r\n        border-radius: 10px;\r\n        border: 2px solid transparent;\r\n        background-clip: content-box;\r\n        background-color: #8e9cd7;\r\n    }\r\n\r\n\r\n    .test__heading {\r\n        margin-bottom: 5px;\r\n    }\r\n\r\n    .test__message {\r\n        width: 100%;\r\n        height: 100%;\r\n        position: relative;\r\n        padding: 30px;\r\n    }\r\n\r\n    /* .test__message__rules {\r\n        padding: 3% 5% 0;\r\n    } */\r\n\r\n    .test__play {\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n\r\n    /* 画面上部 */\r\n    \r\n    .test__play__flex {\r\n        width: 100%;\r\n        height: 75%;\r\n\r\n        display: flex;\r\n        justify-content: left;\r\n        align-items: flex-start;\r\n        flex-wrap: wrap;\r\n        align-content: flex-start;\r\n    }\r\n\r\n    .test__card {\r\n        width: fit-content;\r\n        height: fit-content;\r\n        min-width: 23%;\r\n        margin: 15px 0.8%;\r\n\r\n        background-color: white;\r\n        border-radius: 5px;\r\n\r\n        transition: all 0.5s ease;\r\n    }\r\n    .test__card__wordPos {\r\n        width: fit-content;\r\n        height: fit-content;\r\n        position: relative;\r\n        margin: 10px 5px 5px;\r\n\r\n    }\r\n\r\n    .test__card__wordInputted {\r\n        position: absolute;\r\n        color: rgb(41 190 90);\r\n        text-align: center;\r\n        margin: 0 5px;\r\n        z-index: 10;\r\n    }\r\n    .wordDummy__same {\r\n        text-decoration: underline rgb(41 190 90);\r\n    }\r\n\r\n    .test__card__wordUnder {\r\n        color: rgb(185, 190, 157);\r\n        position: absolute;\r\n        margin: 0 5px;\r\n    }\r\n    .test__card__wordDummy {\r\n        width: fit-content;\r\n        background-color: white;\r\n        padding: 0 5px;\r\n        color: white;\r\n        border: dashed 1px rgb(176, 178, 190);\r\n    }\r\n\r\n\r\n    .test__card__pos {\r\n        font-size: 0.8rem;\r\n        margin: 0 5px;\r\n    }\r\n    .test__card__desc {\r\n        margin: 5px;\r\n    }\r\n\r\n\r\n    /* 画面下部 */\r\n    .test__play__state {\r\n        width: 100%;\r\n        height: fit-content;\r\n        \r\n        position: relative;\r\n        bottom: 0;\r\n    }\r\n\r\n    .test__play__timerdummy {\r\n        width: 100%;\r\n        height: 12px;\r\n\r\n        position: absolute;\r\n        top: 0;\r\n    }\r\n    .test__play__timer {\r\n        width: 100%;\r\n        height: 12px;\r\n\r\n        position: absolute;\r\n        top: 5px;\r\n\r\n        animation-name: timer;\r\n        animation-duration: 60s;\r\n        animation-fill-mode: forwards;\r\n        animation-timing-function: linear;\r\n    }\r\n\r\n    .test__play__letters {\r\n        position: absolute;\r\n        top: 30px;\r\n        left: 0;\r\n        right: 0;\r\n        margin: 0 auto;\r\n        text-align: center;\r\n\r\n        font-weight: bold;\r\n        font-size: 2rem;\r\n    }\r\n\r\n    .letters__green {\r\n        color: rgb(41 190 90);\r\n    }\r\n    .letters__red {\r\n        color: #ca0000;;\r\n    }\r\n\r\n    .cursorHide {\r\n        color: rgba(0, 0, 0, 0);\r\n    }\r\n\r\n\r\n    .test__result {\r\n        height: 100%;\r\n        overflow-y: scroll;\r\n    }\r\n    .test__result__stickyDummy {\r\n        position: sticky;\r\n        top: 0;\r\n        background-color: rgb(216 216 227);\r\n        z-index: 100;\r\n        /* border-bottom: dashed gray 1px; */\r\n    }\r\n    .test__result__scorePara {\r\n        padding: 30px;\r\n    }\r\n    .test__resultHL {\r\n        color: rgb(81, 82, 141);\r\n        font-weight: bold;\r\n    }\r\n\r\n    .test__result__wordFlex {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n    }\r\n\r\n    .test__introTra-enter-from {\r\n        opacity: 0;\r\n    }\r\n    .test__introTra-enter-to {\r\n        opacity: 1;\r\n    }\r\n    .test__introTra-enter-active {\r\n        transition: 0.3s;\r\n    }\r\n\r\n    .test__tra-enter-from, .test__tra-leave-to {\r\n        /* transform: rotateY(0.5turn); */\r\n        opacity: 0;\r\n    }\r\n    .test__tra-enter-to, .test__tra-leave-from {\r\n        /* transform: rotateY(0.5turn); */\r\n        opacity: 1;\r\n    }\r\n    .test__tra-enter-active{\r\n        transition: 0.3s;\r\n        transform: none;\r\n    }\r\n\r\n    .test__tra-leave-active {\r\n        position: absolute;\r\n        transition: transform 0s, opacity 0s;\r\n    }\r\n\r\n\r\n    .test__tra-move {\r\n        transition: transform 0.3s ease;\r\n    }\r\n\r\n    @keyframes timer{\r\n        0% {\r\n            width: 100%;\r\n            background-color: rgb(93, 253, 29);\r\n        }\r\n        50% {\r\n            width: 50%;\r\n            background-color: rgb(255, 164, 45);\r\n\r\n        }\r\n        100% {\r\n            width: 0%;\r\n            background-color: rgb(255, 60, 46);\r\n        }\r\n    }\r\n\r\n</style>","import { render } from \"./TestView.vue?vue&type=template&id=95132f92&scoped=true\"\nimport script from \"./TestView.vue?vue&type=script&lang=js\"\nexport * from \"./TestView.vue?vue&type=script&lang=js\"\n\nimport \"./TestView.vue?vue&type=style&index=0&id=95132f92&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\work\\\\vocabTester\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-95132f92\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","_hoisted_3","_hoisted_4","_createElementBlock","_createVNode","_Transition","name","_hoisted_5","_ctx","_TransitionGroup","tag","_Fragment","_renderList","item","key","wordDummy__same","$props","startsWith","slice","length","_toDisplayString","Math","max","description","_hoisted_12","letters__green","$options","includes","letters__red","every","elm","cursorHide","_hoisted_19","_hoisted_20","a","data","test","letters","cursorShow","word_point","selectedIdx","selectedMap","selectedShow","cardInterval","cursorTimer","removedWord","score","props","methods","startTrain","thisVue","this","$nextTick","setInterval","choiceCards","timer","Array","from","document","getElementsByClassName","addEventListener","clearInterval","prevPoint","currentPoint","randomChoice","floor","random","wordData","push","word","computed","selectedWords","tempArr","forEach","beforeMount","async","e","code","window","pushedKey","toLowerCase","Object","keys","idx","indexOf","splice","match","beforeUnmount","__exports__","render"],"sourceRoot":""}